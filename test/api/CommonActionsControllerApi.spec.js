/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

// CommonJS-like environments that support module.exports, like Node.
factory(require('expect.js'), require(process.cwd()+'/src/index'));

'use strict';

var instance;

beforeEach(function() {
  instance = new MailslurpJavascriptApollo.CommonActionsControllerApi();
});

var getProperty = function(object, getter, property) {
  // Use getter method if present; otherwise, get the property directly.
  if (typeof object[getter] === 'function')
    return object[getter]();
  else
    return object[property];
}

var setProperty = function(object, setter, property, value) {
  // Use setter method if present; otherwise, set the property directly.
  if (typeof object[setter] === 'function')
    object[setter](value);
  else
    object[property] = value;
}

describe('CommonActionsControllerApi', function() {
    describe('createNewEmailAddress', function() {
      it('should call createNewEmailAddress successfully', function(done) {
        //uncomment below and update the code to test createNewEmailAddress
        //instance.createNewEmailAddress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNewEmailAddress1', function() {
      it('should call createNewEmailAddress1 successfully', function(done) {
        //uncomment below and update the code to test createNewEmailAddress1
        //instance.createNewEmailAddress1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('emptyInbox', function() {
      it('should call emptyInbox successfully', function(done) {
        //uncomment below and update the code to test emptyInbox
        //instance.emptyInbox(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendEmailSimple', function() {
      it('should call sendEmailSimple successfully', function(done) {
        //uncomment below and update the code to test sendEmailSimple
        //instance.sendEmailSimple(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
});